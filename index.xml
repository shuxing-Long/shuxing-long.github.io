<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>307的学习笔记</title>
    <link>https://shuxing-long.github.io/</link>
    <description>Recent content on 307的学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 26 Mar 2021 09:54:35 +0800</lastBuildDate><atom:link href="https://shuxing-long.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Creating a New Theme</title>
      <link>https://shuxing-long.github.io/posts/2014/09/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxing-long.github.io/posts/2014/09/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://shuxing-long.github.io/posts/2014/03/migrate-to-hugo-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxing-long.github.io/posts/2014/03/migrate-to-hugo-from-jekyll/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Js_5</title>
      <link>https://shuxing-long.github.io/jsxx/js_5/</link>
      <pubDate>Fri, 26 Mar 2021 09:54:35 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/jsxx/js_5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>ASPnet_2</title>
      <link>https://shuxing-long.github.io/asp.net_web/aspnet_2/</link>
      <pubDate>Tue, 23 Mar 2021 08:44:37 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/asp.net_web/aspnet_2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>学习js</title>
      <link>https://shuxing-long.github.io/blog/js/</link>
      <pubDate>Mon, 22 Mar 2021 14:21:19 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/js/</guid>
      <description>点击下面查看笔记</description>
    </item>
    
    <item>
      <title>学习js第一章</title>
      <link>https://shuxing-long.github.io/jsxx/js_1/</link>
      <pubDate>Mon, 22 Mar 2021 11:51:49 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/jsxx/js_1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>第一章</title>
      <link>https://shuxing-long.github.io/asp.net_web/asp.nwt_1/</link>
      <pubDate>Tue, 02 Feb 2021 11:51:49 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/asp.net_web/asp.nwt_1/</guid>
      <description>1.1 web应用程序大概有两种：静态网页和动态网页。 静态网页的工作流程：
 响应 -------------------------------------------------------------- | | | ---------------------------- 浏览器--------------&amp;gt;网络-------------------------&amp;gt; | web服务器&amp;lt;-------&amp;gt;静态页面 | 请求 ---------------------------- 动态网页的工作流程：
 响应 -------------------------------------------------------------- | | | ---------------------------- 浏览器--------------&amp;gt;网络-------------------------&amp;gt; | web服务器&amp;lt;-------&amp;gt;静态页面 | 请求 | | | | |-&amp;gt;动态脚本 | | | 程序 ---&amp;gt;数据库 | |（JSP,ASP) | ---------------------------- 1.2 HTTP协议 URL:URL是Uniform Resource Locator的缩写，表示统一的资源定位器，是专为标识网络上的 资源位置而设定的一种编码地址方式。
URL格式：
 应用层协议://主机IP地址或域名/资源所在路径/文件名 总结 web应用程序二点工作原理是什么： 1.用户在浏览器输入网址或点击按钮提交请求 2.浏览器以HTTP协议的规定把请求传输到服务器中，服务器处理信息，再回传到用户浏览器中
HTTP的请求方式有那行：
1.post和get</description>
    </item>
    
    <item>
      <title>学习ASP.NWT WEB</title>
      <link>https://shuxing-long.github.io/blog/asp.net/</link>
      <pubDate>Mon, 01 Feb 2021 14:21:19 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/asp.net/</guid>
      <description>点击下面查看笔记</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://shuxing-long.github.io/about/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxing-long.github.io/about/</guid>
      <description>Hugo is the world’s fastest framework for building websites. It is written in Go.
It makes use of a variety of open source projects including:
 https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://shuxing-long.github.io/posts/2014/04/hugo-template-primer/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://shuxing-long.github.io/posts/2014/04/hugo-template-primer/</guid>
      <description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on 零的学习笔记</title>
    <link>https://shuxing-long.github.io/blog/</link>
    <description>Recent content in Blogs on 零的学习笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 02 Jul 2021 16:49:50 +0800</lastBuildDate><atom:link href="https://shuxing-long.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Vue</title>
      <link>https://shuxing-long.github.io/blog/vue/</link>
      <pubDate>Fri, 02 Jul 2021 16:49:50 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/vue/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SQL理论</title>
      <link>https://shuxing-long.github.io/blog/sqltheory/</link>
      <pubDate>Thu, 03 Jun 2021 08:42:39 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/sqltheory/</guid>
      <description>1.触发器的作业： 触发器是一种特殊的存储过程，主要是通过事件来触发而被执行的。它可以强化约束，来维护数据的完整性和一致性， 可以跟踪数据库内的操作从而不允许未经可许的更新和变化。可以联级运算。如，某表上的触发器上包含对另一个表 的数据操作，而该操作又会导致该表触发器被触发。  2.什么是存储过程？用什么来调用： 存储过程是一个预编译的SQL语句，优点是允许模块化的设计，就是说只需建立一次，以后在该程序中就可以调用多次。 如果某次操作需要执行多次SQL,使用存储过程比单纯SQL语句执行要快。可以用一个命令对象来调用存储过程。  3.索引的作用？和它的优点和缺点： 索引就是一种特殊的查询表，数据库的搜索引擎可以利用它加速对数据的检索。它很类似与现实生活中书的目录，不需要查询 整本书内容就可以找到想要的数据，索引可以是唯一的创建索引允许单个列或者是多个列。缺点是它减慢了数据录入的速度，同时也增加了数据库的尺寸大小。  4.主键和索引的区别： (1).主键时为标识数据库记录的唯一性，不允许记录重复，且键值不能为空，主键也是一个特殊索引; (2).数据表中只允许有一个主键，但是可以有多个索引; (3).使用主键数据库会自动创建主索引，也可以在非主键上创建索引，方便查询效率; (4).索引可以提高查询速度，它就相当与在字典的目录，可以通过它很快查询到想要的结果，而不需要进行全表扫描; (5).主键也可以由多个字段组成，组成复合主键，同时主键肯定也是唯一索引; (6).唯一索引则标识该索引值唯一，可以由一个或几个字段组成，一个表可以有多个唯一索引;  5.什么是内存泄漏： 一般我们所说的内存泄漏指的是堆内存的泄漏。堆内存是程序从堆中为其分配的，大小任意的，使用完后要显示释放内存。当应用程序关键字new等创建对象时，就从堆中为它分配一块内存，使用完后程序调用free或者delete释放该内存，否则就说该内存就不能被使用，我们就说该内存被泄漏了。  6.维护数据库的完整性和一致性，你喜欢用触发器还是自写业务逻辑？为什么： 尽可能使用约束，如check,主键，外键，非空字段等来约束，这样做效率最高，也最方便。其次是使用触发器，这种方法可以保证，无论什么业务系统访问数据库都可以保证数据的完整性和一致性。最后考虑的是自写业务逻辑，但这样做麻烦，编写复杂，效率低下。  7.什么是事务： 事务就是被绑定在一起作为一个逻辑工作单元的SQL语句分组，如果任何一个语句操作失败那么整个就被失败，以后操作就会回滚到操作状态，或者是上有一个 </description>
    </item>
    
    <item>
      <title>MVC</title>
      <link>https://shuxing-long.github.io/blog/mvc/</link>
      <pubDate>Mon, 22 Mar 2021 14:21:19 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/mvc/</guid>
      <description>点击下面查看笔记</description>
    </item>
    
    <item>
      <title>学习js</title>
      <link>https://shuxing-long.github.io/blog/js/</link>
      <pubDate>Mon, 22 Mar 2021 14:21:19 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/js/</guid>
      <description>点击下面查看笔记</description>
    </item>
    
    <item>
      <title>学习ASP.NWT WEB</title>
      <link>https://shuxing-long.github.io/blog/asp.net/</link>
      <pubDate>Mon, 01 Feb 2021 14:21:19 +0800</pubDate>
      
      <guid>https://shuxing-long.github.io/blog/asp.net/</guid>
      <description>点击下面查看笔记</description>
    </item>
    
  </channel>
</rss>
